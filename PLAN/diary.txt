NOTE THE CHANGES AND PROGRESS WE HAVE DONE WITH DATE

12/11
	nothing done atm (10.50)
15/11 (CARLO)
	lexer is correctly working
		it divides the input sentence in tokens
		set token type

	to test it and see token division and type
		gcc structures/s_envp.c main.c libft/ft_split.c libft/ft_strlcpy.c libft/ft_strlen.c libft/ft_memcpy.c structures/s_token.c lexer/lexer.c lexer/lexer_utils.c lexer/read_line.c libft/ft_strncmp.c libft/ft_substr.c libft/ft_strdup.c -lreadline



29/11
	how "$?" between quote or double quotes is going to be expanded


8/12
	do		SHELL VARIABLE assignation after tokenize when token value is: name=value (with no spaces between = sign and words)-(with no quotes in the <KEY>)
			only if this is the first token
	check	ENVP STRUCT for shell_env

	manage	Minishell calling minishell what happens in envp

	do		quote removal
	do		BUILTINS
	do 		EXPANDER
	do 		SIGNALS
	do 		ERROR MANAGEMENT

	changed strcmp -> strncmp in set_red.c

11/12
	added shell var addition, modification, added var type, deleted var declaration token

13/12
	delete pipe after removing var declaration (done)
	added export, unset, env, pwd, cd

	!!TO FIX enter pressed with no args on readline!!

	export print in alpha order
	export accepts more than one arg

14/12
	to do:
		-echo builtin
		-quote removal
		-errno handling
		-malloc error handling
		-no arg to readline

15/12
	expander almost complete and tested expander

16/12
	#bultins redirection
	#check token syntax, PIPE at the end
	#fix token trim on spaces only, accept spaces only if quotes or dquotes are open
	#infile and outfile merge them in file
	#quote removal
	
17/12	
	#print in order with export and print mpty var value with ""
	error checking
	malloc fail check
	errno
	token empty after expander?
	quote remove on '$PWD' not to expand

20/12
	#malloc fail does not stop the program! after prompt call
	#close fd if child error
	#divide executer_single
	#check if execve args can be created before fork and free then 
	#put execve args in data struct
	#free cmd path free in case of failure (maybe not necessary)

22/12	
	#with a pipe after heredoc something happens not correctly (print fd to see), fix heredoc in multi line (it does not create file)
	#replace heredoc with a file
	#create heredoc file before execution of the command (check for the signals) in a child process

23/12	
	errno propagation
	exit func
	signals in child
	check builtins return for correct return value
	builtins has to write error STDERR_FILENO
	do a special quote removal before checking the name of $var (not necessary)
	add signals for heredoc
	signal SIGINT in heredoc quit heredoc (maybe do it in a child process)

	LINK THE LIBRARY LIBFT!!!!!!!!